{"uid":"2eae64acf33481fe","name":"test_get_user_info[正常获取个人身份信息]","fullName":"test_case.UserInfo.test_get_user_info.TestGetUserInfo#test_get_user_info","historyId":"a89bc2e4b5872074bfcf6030fb832d39","time":{"start":1732457459525,"stop":1732457459700,"duration":175},"description":"\n        :param :\n        :return:\n        ","descriptionHtml":"<pre><code>    :param :\n    :return:\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_get_user_info.TestGetUserInfo object at 0x103812a90>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 0}, 'username': {...'type': '==', 'value': '18800000001'}}, 'current_request_set_cache': None, 'data': None, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"个人信息接口\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_get_user_info(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case/UserInfo/test_get_user_info.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/assertion/assert_control.py:154: in assert_equality\n    self.assert_type_handle(\nutils/assertion/assert_control.py:122: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = -1001, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text = \"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value, message\nE       AssertionError\n\nutils/assertion/assert_type.py:18: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732457459220,"stop":1732457459233,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"work_login_init","time":{"start":1732457459233,"stop":1732457459521,"duration":288},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"case_skip","time":{"start":1732457459522,"stop":1732457459524,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        :param :\n        :return:\n        ","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_get_user_info.TestGetUserInfo object at 0x103812a90>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 0}, 'username': {...'type': '==', 'value': '18800000001'}}, 'current_request_set_cache': None, 'data': None, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"个人信息接口\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_get_user_info(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case/UserInfo/test_get_user_info.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/assertion/assert_control.py:154: in assert_equality\n    self.assert_type_handle(\nutils/assertion/assert_control.py:122: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = -1001, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text = \"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value, message\nE       AssertionError\n\nutils/assertion/assert_type.py:18: AssertionError","steps":[{"name":"请求URL: https://www.wanandroid.com/user/lg/userinfo/json","time":{"start":1732457459695,"stop":1732457459695,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"请求方式: GET","time":{"start":1732457459695,"stop":1732457459695,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"请求头: ","time":{"start":1732457459695,"stop":1732457459697,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"21e11dfc9ff463c4","name":"请求头: ","source":"21e11dfc9ff463c4.json","type":"application/json","size":225}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"请求数据: ","time":{"start":1732457459697,"stop":1732457459697,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"f743c3a37d72df48","name":"请求数据: ","source":"f743c3a37d72df48.json","type":"application/json","size":6}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"预期数据: ","time":{"start":1732457459697,"stop":1732457459697,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"135a8198a473e8eb","name":"预期数据: ","source":"135a8198a473e8eb.json","type":"application/json","size":202}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"响应耗时(ms): 160","time":{"start":1732457459697,"stop":1732457459697,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"响应结果: ","time":{"start":1732457459698,"stop":1732457459698,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"d1726d97f5d65911","name":"响应结果: ","source":"d1726d97f5d65911.json","type":"application/json","size":56}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true}],"attachments":[{"uid":"45e4b26c984d8532","name":"log","source":"45e4b26c984d8532.txt","type":"text/plain","size":711}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"个人信息模块"},{"name":"epic","value":"开发平台接口"},{"name":"story","value":"个人信息接口"},{"name":"parentSuite","value":"test_case.UserInfo"},{"name":"suite","value":"test_get_user_info"},{"name":"subSuite","value":"TestGetUserInfo"},{"name":"host","value":"liaoxiaoliaodeMacBook-Air.local"},{"name":"thread","value":"59032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.UserInfo.test_get_user_info"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"in_data","value":"{'url': 'https://www.wanandroid.com/user/lg/userinfo/json', 'method': 'GET', 'detail': '正常获取个人身份信息', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None}, 'username': {'jsonpath': '$.data.userInfo.username', 'type': '==', 'value': '18800000001', 'AssertType': None}}, 'headers': {'Content-Type': 'multipart/form-data;', 'cookie': '$cache{login_cookie}'}, 'requestType': 'DATA', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2eae64acf33481fe.json","parameterValues":["{'url': 'https://www.wanandroid.com/user/lg/userinfo/json', 'method': 'GET', 'detail': '正常获取个人身份信息', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None}, 'username': {'jsonpath': '$.data.userInfo.username', 'type': '==', 'value': '18800000001', 'AssertType': None}}, 'headers': {'Content-Type': 'multipart/form-data;', 'cookie': '$cache{login_cookie}'}, 'requestType': 'DATA', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"]}