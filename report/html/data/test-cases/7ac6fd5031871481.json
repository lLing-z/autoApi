{"uid":"7ac6fd5031871481","name":"test_login[正常登录]","fullName":"test_case.Login.test_login.TestLogin#test_login","historyId":"50546d53f6058092b6fcaac1ce4c98ab","time":{"start":1732457462330,"stop":1732457462591,"duration":261},"description":"\n        :param :\n        :return:\n        ","descriptionHtml":"<pre><code>    :param :\n    :return:\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_login.TestLogin object at 0x103d56d00>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 0}, 'username': {...ent_request_set_cache': None, 'data': {'password': '123456', 'username': '18800000001'}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_login(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case/Login/test_login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/assertion/assert_control.py:154: in assert_equality\n    self.assert_type_handle(\nutils/assertion/assert_control.py:122: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = -1, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text = \"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value, message\nE       AssertionError\n\nutils/assertion/assert_type.py:18: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732457459220,"stop":1732457459233,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"work_login_init","time":{"start":1732457459233,"stop":1732457459521,"duration":288},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"case_skip","time":{"start":1732457462330,"stop":1732457462330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        :param :\n        :return:\n        ","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_login.TestLogin object at 0x103d56d00>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 0}, 'username': {...ent_request_set_cache': None, 'data': {'password': '123456', 'username': '18800000001'}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_login(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case/Login/test_login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/assertion/assert_control.py:154: in assert_equality\n    self.assert_type_handle(\nutils/assertion/assert_control.py:122: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = -1, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text = \"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value, message\nE       AssertionError\n\nutils/assertion/assert_type.py:18: AssertionError","steps":[{"name":"请求URL: https://www.wanandroid.com/user/login","time":{"start":1732457462586,"stop":1732457462586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"请求方式: POST","time":{"start":1732457462586,"stop":1732457462586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"请求头: ","time":{"start":1732457462586,"stop":1732457462587,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"cd74aa5f5b438af0","name":"请求头: ","source":"cd74aa5f5b438af0.json","type":"application/json","size":204}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"请求数据: ","time":{"start":1732457462588,"stop":1732457462588,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"93553095e6c03141","name":"请求数据: ","source":"93553095e6c03141.json","type":"application/json","size":51}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"预期数据: ","time":{"start":1732457462588,"stop":1732457462589,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"2516e0d6148b9125","name":"预期数据: ","source":"2516e0d6148b9125.json","type":"application/json","size":193}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"响应耗时(ms): 248","time":{"start":1732457462589,"stop":1732457462589,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"响应结果: ","time":{"start":1732457462589,"stop":1732457462590,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"b14b43fc84383619","name":"响应结果: ","source":"b14b43fc84383619.json","type":"application/json","size":76}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true}],"attachments":[{"uid":"7fe28fc7f1ac2d69","name":"log","source":"7fe28fc7f1ac2d69.txt","type":"text/plain","size":725}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"开发平台接口"},{"name":"feature","value":"登录模块"},{"name":"story","value":"登录"},{"name":"parentSuite","value":"test_case.Login"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"liaoxiaoliaodeMacBook-Air.local"},{"name":"thread","value":"59032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.Login.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"in_data","value":"{'url': 'https://www.wanandroid.com/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None}, 'username': {'jsonpath': '$.data.username', 'type': '==', 'value': '18800000001', 'AssertType': None}}, 'headers': None, 'requestType': 'DATA', 'is_run': None, 'data': {'username': '18800000001', 'password': '123456'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7ac6fd5031871481.json","parameterValues":["{'url': 'https://www.wanandroid.com/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None}, 'username': {'jsonpath': '$.data.username', 'type': '==', 'value': '18800000001', 'AssertType': None}}, 'headers': None, 'requestType': 'DATA', 'is_run': None, 'data': {'username': '18800000001', 'password': '123456'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"]}