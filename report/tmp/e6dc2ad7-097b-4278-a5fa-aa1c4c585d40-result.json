{"name": "test_collect_addtool[新增收藏网址接口]", "status": "broken", "statusDetails": {"message": "utils.other_tools.exceptions.ValueNotFoundError: 缓存设置失败，程序中未检测到需要缓存的数据。请求参数: {\"errorCode\":-1001,\"errorMsg\":\"请先登录！\"}提取的 jsonpath 内容: $.data.id", "trace": "self = <test_collect_addtool.TestCollectAddtool object at 0x1038cad30>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'message': 'errorCode 断言为 0', 'type': '=...se'}], 'data': {'link': 'https://gitee.com/yu_xiao_qi/pytest-auto-api2', 'name': '自动化'}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"收藏网址接口\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_collect_addtool(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n>       res = RequestControl(in_data).http_request()\n\ntest_case/Collect/test_collect_addtool.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/logging_tool/log_decorator.py:26: in swapper\n    res = func(*args, **kwargs)\nutils/logging_tool/run_time_decorator.py:21: in swapper\n    res = func(*args, **kwargs)\nutils/requests_tool/request_control.py:433: in http_request\n    SetCurrentRequestCache(\nutils/requests_tool/set_current_request_cache.py:73: in set_caches_main\n    self.set_response_cache(jsonpath_value=_jsonpath, cache_name=_cache_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.requests_tool.set_current_request_cache.SetCurrentRequestCache object at 0x103dfefd0>, jsonpath_value = '$.data.id', cache_name = 'yushaoqi_sql'\n\n    def set_response_cache(\n            self,\n            jsonpath_value: Text,\n            cache_name\n    ):\n        \"\"\"将响应结果存入缓存\"\"\"\n        _response_data = jsonpath(json.loads(self.response_data), jsonpath_value)\n        if _response_data is not False:\n            CacheHandler.update_cache(cache_name=cache_name, value=_response_data[0])\n            # Cache(cache_name).set_caches(_response_data[0])\n        else:\n>           raise ValueNotFoundError(\"缓存设置失败，程序中未检测到需要缓存的数据。\"\n                                     f\"请求参数: {self.response_data}\"\n                                     f\"提取的 jsonpath 内容: {jsonpath_value}\")\nE           utils.other_tools.exceptions.ValueNotFoundError: 缓存设置失败，程序中未检测到需要缓存的数据。请求参数: {\"errorCode\":-1001,\"errorMsg\":\"请先登录！\"}提取的 jsonpath 内容: $.data.id\n\nutils/requests_tool/set_current_request_cache.py:60: ValueNotFoundError"}, "description": "\n        :param :\n        :return:\n        ", "steps": [{"name": "请求URL: https://www.wanandroid.com/lg/collect/addtool/json", "status": "passed", "start": 1732457459920, "stop": 1732457459920}, {"name": "请求方式: POST", "status": "passed", "start": 1732457459920, "stop": 1732457459920}, {"name": "请求头: ", "status": "passed", "attachments": [{"name": "请求头: ", "source": "6f30c2f7-1b3d-4fac-a7e9-8e7b61f81244-attachment.json", "type": "application/json"}], "start": 1732457459920, "stop": 1732457459921}, {"name": "请求数据: ", "status": "passed", "attachments": [{"name": "请求数据: ", "source": "c15e4f46-9077-48b2-8572-b9dcdca93991-attachment.json", "type": "application/json"}], "start": 1732457459921, "stop": 1732457459921}, {"name": "预期数据: ", "status": "passed", "attachments": [{"name": "预期数据: ", "source": "a7f85c43-ceb4-43e5-968b-c74585f19464-attachment.json", "type": "application/json"}], "start": 1732457459921, "stop": 1732457459922}, {"name": "响应耗时(ms): 156", "status": "passed", "start": 1732457459922, "stop": 1732457459922}, {"name": "响应结果: ", "status": "passed", "attachments": [{"name": "响应结果: ", "source": "96a17a9a-6f07-4cb2-bfbd-ee42355a22ed-attachment.json", "type": "application/json"}], "start": 1732457459922, "stop": 1732457459922}], "parameters": [{"name": "in_data", "value": "{'url': 'https://www.wanandroid.com/lg/collect/addtool/json', 'method': 'POST', 'detail': '新增收藏网址接口', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None, 'message': 'errorCode 断言为 0'}}, 'headers': {'cookie': '$cache{login_cookie}'}, 'requestType': 'DATA', 'is_run': None, 'data': {'name': '自动化', 'link': 'https://gitee.com/yu_xiao_qi/pytest-auto-api2'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': [\"UPDATE `api_test`.`ysq_test` SET `name` = '$json($.data.id)$' WHERE `name` = '2' LIMIT 1\"], 'teardown': [{'case_id': 'collect_delete_tool_01', 'param_prepare': None, 'send_request': [{'dependent_type': 'response', 'jsonpath': '$.data.id', 'cache_data': None, 'set_cache': None, 'replace_key': '$.data.id'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.id', 'name': 'yushaoqi_sql'}], 'sleep': None}"}], "start": 1732457459759, "stop": 1732457459922, "uuid": "887ad6fe-3e3a-4739-9e6e-f880b7523b8a", "historyId": "112ba6cd5147d71baaef4374c26f990a", "testCaseId": "adbd94cd9f9c0fd77e3bf962b0cd17b8", "fullName": "test_case.Collect.test_collect_addtool.TestCollectAddtool#test_collect_addtool", "labels": [{"name": "epic", "value": "开发平台接口"}, {"name": "feature", "value": "收藏模块"}, {"name": "story", "value": "收藏网址接口"}, {"name": "parentSuite", "value": "test_case.Collect"}, {"name": "suite", "value": "test_collect_addtool"}, {"name": "subSuite", "value": "TestCollectAddtool"}, {"name": "host", "value": "liaoxiaoliaodeMacBook-Air.local"}, {"name": "thread", "value": "59032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.Collect.test_collect_addtool"}]}